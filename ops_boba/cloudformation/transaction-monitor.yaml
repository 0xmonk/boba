AWSTemplateFormatVersion: "2010-09-09"
Description: "Enya Transaction Monitor Deployment"

Parameters:
  EnvironmentName:
    Type: String
    Default: dev

  ServiceCount:
    Type: Number
    Default: 1

  ImageTag:
    Type: String
    Default: push2aws


  TransactionMonitorImage:
    Type: String
    Default: transaction-monitor

  DockerPrefix:
    Type: String
    Default: omgx

  LogsRetention:
    Type: Number
    Default: 7

  InfrastructureStackName:
    Description: Infrastructure stack to associate this stack with
    Type: String
    Default: infrastructure-coredev

Resources:
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub ecs-tasks.${AWS::URLSuffix}
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowAccessToS3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetBucketLocation"
                Resource: !Sub
                    - "arn:aws:s3:::${S3BucketV2}/transaction-monitor.env"
                    - S3BucketV2:
                        Fn::ImportValue: !Sub "${InfrastructureStackName}:S3BucketV2"
  TransactionMonitorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/omgx/${EnvironmentName}/transaction-monitor/${ImageTag}"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Image: !Sub "${DockerPrefix}/${TransactionMonitorImage}:${ImageTag}"
          Name: transaction-monitor
          EnvironmentFile:
            - Value: !Sub
              - "arn:aws:s3:::${S3BucketV2}/transaction-monitor.env"
              - S3BucketV2:
                  Fn::ImportValue: !Sub "${InfrastructureStackName}:S3BucketV2"
            - Type: "s3"
          DockerLabels:
            com.datadoghq.ad.check_names: '["transaction-monitor"]'
            com.datadoghq.ad.init_configs: '[{}]'
            com.datadoghq.ad.logs: '[{"source": "transaction-monitor", "service": "transaction-monitor"}]'
          Essential: true
          Memory: "128"
      NetworkMode: bridge
      TaskRoleArn: !GetAtt TaskRole.Arn
      Family: "transaction-monitor"
      ExecutionRoleArn: "arn:aws:iam::942431445534:role/ecs-s3-rolw"
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub "${InfrastructureStackName}:EcsCluster"
      DesiredCount: !Ref ServiceCount
      LaunchType: EC2
      SchedulingStrategy: REPLICA
      ServiceName: "transaction-monitor"
      TaskDefinition: !Ref TaskDefinition
